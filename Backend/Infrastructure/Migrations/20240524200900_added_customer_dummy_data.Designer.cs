// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240524200900_added_customer_dummy_data")]
    partial class added_customer_dummy_data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Business", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BusinessId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostCode")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_BusinessId");

                    b.ToTable("Business", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3ead016-1f61-4dc9-b0f1-1f4ee2f27c16"),
                            Address = "Snarøyveien 30",
                            County = "Fornebu",
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 828, DateTimeKind.Utc).AddTicks(8750),
                            Email = "noreply@telenor.com",
                            IsDeleted = false,
                            Name = "Telenor",
                            PostCode = 1360
                        });
                });

            modelBuilder.Entity("Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerNumber"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrivateCustomer")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("OrganizationNr")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostCode")
                        .HasColumnType("int");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_CustomerId");

                    b.HasIndex("BusinessId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("91c43403-f90a-423d-b508-fa0ede2397bb"),
                            Address = "Alice's house",
                            BusinessId = new Guid("e3ead016-1f61-4dc9-b0f1-1f4ee2f27c16"),
                            County = "Bergen",
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(1360),
                            CustomerNumber = 0,
                            Email = "alice@gmail.com",
                            IsDeleted = false,
                            IsPrivateCustomer = true,
                            Name = "Alice Johnson",
                            OrganizationNr = 123987654,
                            PhoneNumber = "23456789",
                            PostCode = 1001,
                            StatusId = new Guid("728df2fc-4cbc-4945-8deb-b4e500f1898c")
                        },
                        new
                        {
                            Id = new Guid("d9660db3-44ee-4cfd-876f-bce41793daa6"),
                            Address = "Bob's residence",
                            BusinessId = new Guid("e3ead016-1f61-4dc9-b0f1-1f4ee2f27c16"),
                            County = "Trondheim",
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(1360),
                            CustomerNumber = 0,
                            Email = "bob@gmail.com",
                            IsDeleted = false,
                            IsPrivateCustomer = false,
                            Name = "Bob Smith",
                            OrganizationNr = 456123789,
                            PhoneNumber = "34567890",
                            PostCode = 2002,
                            StatusId = new Guid("728df2fc-4cbc-4945-8deb-b4e500f1898c")
                        },
                        new
                        {
                            Id = new Guid("cb71484e-cb49-41db-922f-f6c7ec40d720"),
                            Address = "Catherine's apartment",
                            BusinessId = new Guid("e3ead016-1f61-4dc9-b0f1-1f4ee2f27c16"),
                            County = "Stavanger",
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(1370),
                            CustomerNumber = 0,
                            Email = "catherine@gmail.com",
                            IsDeleted = false,
                            IsPrivateCustomer = true,
                            Name = "Catherine Lee",
                            OrganizationNr = 789654321,
                            PhoneNumber = "45678901",
                            PostCode = 3003,
                            StatusId = new Guid("728df2fc-4cbc-4945-8deb-b4e500f1898c")
                        },
                        new
                        {
                            Id = new Guid("9881dc3b-f414-4a8b-8bf0-2b7e2aff2f74"),
                            Address = "David's villa",
                            BusinessId = new Guid("e3ead016-1f61-4dc9-b0f1-1f4ee2f27c16"),
                            County = "Drammen",
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(1380),
                            CustomerNumber = 0,
                            Email = "david@gmail.com",
                            IsDeleted = false,
                            IsPrivateCustomer = false,
                            Name = "David Brown",
                            OrganizationNr = 321789654,
                            PhoneNumber = "56789012",
                            PostCode = 4004,
                            StatusId = new Guid("728df2fc-4cbc-4945-8deb-b4e500f1898c")
                        },
                        new
                        {
                            Id = new Guid("6ad01e61-e9a9-48a6-8e40-1c0efd1cca77"),
                            Address = "Eve's condo",
                            BusinessId = new Guid("e3ead016-1f61-4dc9-b0f1-1f4ee2f27c16"),
                            County = "Kristiansand",
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(1380),
                            CustomerNumber = 0,
                            Email = "eve@gmail.com",
                            IsDeleted = false,
                            IsPrivateCustomer = true,
                            Name = "Eve White",
                            OrganizationNr = 654321987,
                            PhoneNumber = "67890123",
                            PostCode = 5005,
                            StatusId = new Guid("728df2fc-4cbc-4945-8deb-b4e500f1898c")
                        },
                        new
                        {
                            Id = new Guid("e67b406b-9ffb-4ece-87bd-4448c8d90228"),
                            Address = "Frank's house",
                            BusinessId = new Guid("e3ead016-1f61-4dc9-b0f1-1f4ee2f27c16"),
                            County = "Bodø",
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(1390),
                            CustomerNumber = 0,
                            Email = "frank@gmail.com",
                            IsDeleted = false,
                            IsPrivateCustomer = false,
                            Name = "Frank Green",
                            OrganizationNr = 987123654,
                            PhoneNumber = "78901234",
                            PostCode = 6006,
                            StatusId = new Guid("728df2fc-4cbc-4945-8deb-b4e500f1898c")
                        },
                        new
                        {
                            Id = new Guid("74a7e7b6-634c-4cfa-a2cc-f7dc5d3a47eb"),
                            Address = "Grace's home",
                            BusinessId = new Guid("e3ead016-1f61-4dc9-b0f1-1f4ee2f27c16"),
                            County = "Haugesund",
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(1390),
                            CustomerNumber = 0,
                            Email = "grace@gmail.com",
                            IsDeleted = false,
                            IsPrivateCustomer = true,
                            Name = "Grace Miller",
                            OrganizationNr = 654987321,
                            PhoneNumber = "89012345",
                            PostCode = 7007,
                            StatusId = new Guid("728df2fc-4cbc-4945-8deb-b4e500f1898c")
                        },
                        new
                        {
                            Id = new Guid("88e410c2-0148-48e6-9d6f-27ba0a0b6318"),
                            Address = "Henry's flat",
                            BusinessId = new Guid("e3ead016-1f61-4dc9-b0f1-1f4ee2f27c16"),
                            County = "Ålesund",
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(1400),
                            CustomerNumber = 0,
                            Email = "henry@gmail.com",
                            IsDeleted = false,
                            IsPrivateCustomer = false,
                            Name = "Henry Wilson",
                            OrganizationNr = 321654987,
                            PhoneNumber = "90123456",
                            PostCode = 8008,
                            StatusId = new Guid("728df2fc-4cbc-4945-8deb-b4e500f1898c")
                        },
                        new
                        {
                            Id = new Guid("9cf584ee-0bc8-493b-b4fa-f6189c30a1b7"),
                            Address = "Ivy's residence",
                            BusinessId = new Guid("e3ead016-1f61-4dc9-b0f1-1f4ee2f27c16"),
                            County = "Tromsø",
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(1410),
                            CustomerNumber = 0,
                            Email = "ivy@gmail.com",
                            IsDeleted = false,
                            IsPrivateCustomer = true,
                            Name = "Ivy Harris",
                            OrganizationNr = 789321456,
                            PhoneNumber = "01234567",
                            PostCode = 9009,
                            StatusId = new Guid("728df2fc-4cbc-4945-8deb-b4e500f1898c")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK_RoleId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ccafb929-aa82-4981-96f9-53864b688c89"),
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(110),
                            IsDeleted = false,
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("dd5a13da-11e4-4554-a697-76a4102fd72e"),
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(110),
                            IsDeleted = false,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StatusId");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_StatusId");

                    b.ToTable("Status", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("728df2fc-4cbc-4945-8deb-b4e500f1898c"),
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(350),
                            IsDeleted = false,
                            Name = "Lead"
                        },
                        new
                        {
                            Id = new Guid("08bc99d4-87ac-4f56-89e9-af19ab20ab95"),
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(350),
                            IsDeleted = false,
                            Name = "Tatt Kontakt"
                        },
                        new
                        {
                            Id = new Guid("2b8cc7ea-d47b-4d01-90d9-1581ce380422"),
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(350),
                            IsDeleted = false,
                            Name = "I Prosess"
                        },
                        new
                        {
                            Id = new Guid("edd4e8aa-d3bd-40f1-8a97-8da40cef43bb"),
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(350),
                            IsDeleted = false,
                            Name = "Kunde"
                        },
                        new
                        {
                            Id = new Guid("60e8fa5e-560d-41f7-b16c-593e5b0cfd3b"),
                            CreatedBy = new Guid("e3611b6c-0380-46bd-b07f-0a3b85a52464"),
                            CreatedOn = new DateTime(2024, 5, 24, 20, 8, 59, 829, DateTimeKind.Utc).AddTicks(360),
                            IsDeleted = false,
                            Name = "Avslått"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_UserId");

                    b.HasIndex("BusinessId");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Customer", b =>
                {
                    b.HasOne("Domain.Entities.Business", "Business")
                        .WithMany("Customers")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Status", "Status")
                        .WithMany("Customers")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Business");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.HasOne("Domain.Entities.Business", "Business")
                        .WithMany("Users")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Business");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.Entities.Business", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Entities.Status", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
